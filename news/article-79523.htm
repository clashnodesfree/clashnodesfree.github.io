<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
    	<link rel="canonical" href="https://clashnodesfree.github.io/news/article-79523.htm" />
	<!-- basic -->
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	<!-- mobile metas -->
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="viewport" content="initial-scale=1, maximum-scale=1">
	<!-- site metas -->
	<title>【QT实现UDP收发数据】</title>
		<meta name="description" content="使用QT实现UDP发送和接收数据  QT实现UDP流程   代码实现      Internet 协议集支持一个无连接的传输协议，该协议称为用户数据包协议（UDP，User Datagram Prot" />
	
    <meta name="author" content="ClashNodesFree免费订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnodesfree.github.io/news/article-79523.htm" />
    <meta property="og:site_name" content="ClashNodesFree免费订阅站" />
    <meta property="og:title" content="【QT实现UDP收发数据】" />
    <meta property="og:image" content="https://clashnodesfree.github.io/uploads/20240323/2c41239ac39028609af4b6e4c787f732.webp" />
        <meta property="og:release_date" content="2025-03-23T08:21:48" />
    <meta property="og:updated_time" content="2025-03-23T08:21:48" />
        <meta property="og:description" content="使用QT实现UDP发送和接收数据  QT实现UDP流程   代码实现      Internet 协议集支持一个无连接的传输协议，该协议称为用户数据包协议（UDP，User Datagram Prot" />
        
	<!-- bootstrap css -->
	<link rel="stylesheet" type="text/css" href="/assets/website/css/clashnodesfree/bootstrap.min.css">
	<!-- style css -->
	<link rel="stylesheet" type="text/css" href="/assets/website/css/clashnodesfree/style.css">
	<!-- Responsive-->
	<link rel="stylesheet" href="/assets/website/css/clashnodesfree/responsive.css">
	<!-- favicon -->
	<link rel="icon" href="/assets/website/img/clashnodesfree/favicon.ico" type="image/x-icon"/>
	<!-- Scrollbar Custom CSS -->
	<link rel="stylesheet" href="/assets/website/css/clashnodesfree/jquery.mCustomScrollbar.min.css">
	<!-- Tweaks for older IEs-->
	<link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
	<!-- fonts -->
	<link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;800&family=Sen:wght@400;700;800&display=swap" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【QT实现UDP收发数据】">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z348FF31FW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z348FF31FW');
</script>
	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header section start -->
    <div class="header_section header_bg">
        <div class="container-fluid">
                        <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Clash Nodes Free</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="breadcrumb">
              <a href="/">首页</a> / 
              <a href="/news/">新闻资讯</a> / 
              <span>正文</span>
            </div>

            <div class="row">
                <div class="col-md-9">
                    <h1 class="services_taital mb-5">【QT实现UDP收发数据】</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>使用QT实现UDP发送和接收数据</h3> <ul> <li><a href="#QTUDP_2" rel="nofollow">QT实现UDP流程</a></li> <li> <ul> <li><a href="#_5" rel="nofollow">代码实现</a></li> </ul> </li> </ul> </div> </h1> <p>Internet 协议集支持一个无连接的传输协议，该协议称为用户数据包协议（UDP，User Datagram Protocol）。UDP 为应用程序提供了一种无需建立连接就可以发送封装的 IP 数据包的方法。</p> <h2> <a id="_5" rel="nofollow"></a>代码实现</h2> <p>1.在.pro文件中添加网络模块</p> <pre><code class="prism language-cpp">Qt <span class="token operator">+=</span> network </code></pre> <p>2.接收端</p> <pre><code class="prism language-cpp"><span class="token comment">//头文件</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QtNetwork&gt;</span>  </span>     <span class="token comment">//声明接收套接字，头文件</span>     QUdpSocket <span class="token operator">*</span>receiver<span class="token punctuation">;</span>       <span class="token comment">//声明槽函数用于接收并处理数据,头文件</span> <span class="token keyword">public</span> slots<span class="token operator">:</span><span class="token comment">//就字面意思:公开槽</span>     <span class="token keyword">void</span> <span class="token function">Receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//监听接收端口，源文件构造函数中</span>     <span class="token punctuation">{<!-- --></span>         <span class="token comment">//创建UDP套接字对象用于接收数据</span>         receiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QUdpSocket</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//绑定端口，参数1:IP地址（本地），参数2:端口号，参数3:绑定模式（这里是共享模式，DontShareAddress是独占端口模式）</span>         receiver<span class="token operator">-&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span>QHostAddress<span class="token operator">::</span>AnyIPv4<span class="token punctuation">,</span> <span class="token number">8001</span><span class="token punctuation">,</span> QUdpSocket<span class="token operator">::</span>ShareAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//连接槽函数，参数1:信号所在的对象，参数2:信号，参数3:槽函数所在的对象，参数4:槽函数</span>         <span class="token comment">//信号与槽连接后，触发信号会执行槽函数</span>         <span class="token function">connect</span><span class="token punctuation">(</span>receiver<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">readyRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">Receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token comment">//槽函数定义，源文件中</span> <span class="token keyword">void</span> <span class="token class-name">MainWindow</span><span class="token operator">::</span><span class="token function">Receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">//定义QByteArray类型变量</span>     QByteArray datagram<span class="token punctuation">;</span>     <span class="token comment">//设置data的大小为等待处理的数据报的大小，这样才能接收到完整的数据</span>     datagram<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>receiver<span class="token operator">-&gt;</span><span class="token function">pendingDatagramSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 接收数据报，将其存放到datagram中</span>     receiver<span class="token operator">-&gt;</span><span class="token function">readDatagram</span><span class="token punctuation">(</span>datagram<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> datagram<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//处理接收数据</span>     QString str <span class="token operator">=</span> datagram<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//此处data()函数返回char*类型，可以用QString类型接收结果</span>     <span class="token comment">//然后可以将QString显示出来，比如显示在QLabel、QLineEdit、QTextEdit或显示在程序输出里</span>     <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>str<span class="token punctuation">;</span><span class="token comment">//这里用qDebug()是显示在程序输出中，注意！！！使用前需要加头文件&lt;QDebug&gt;!!!</span> <span class="token punctuation">}</span>      <span class="token comment">//关闭接收套接字,源文件析构函数中</span>     receiver<span class="token operator">-&gt;</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>3.发送端</p> <pre><code class="prism language-cpp"><span class="token comment">//头文件</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QtNetwork&gt;</span></span>     <span class="token comment">//声明发送套接字，头文件</span>     QUdpSocket <span class="token operator">*</span>sender<span class="token punctuation">;</span>     <span class="token comment">//发送数据，源文件构造函数中</span>     <span class="token punctuation">{<!-- --></span>         <span class="token comment">//创建UDP套接字用于发送数据</span>         sender <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">QUdpSocket</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//设置要发送的字符串并转变类型</span>     QString str <span class="token operator">=</span> <span class="token string">"543se6w56"</span><span class="token punctuation">;</span>     QByteArray datagram <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toLatin1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//QByteArray datagram = ui-&gt;lineEdit_send-&gt;text().toLatin1();//这里是从ui界面单行文本框中获取数据</span>     <span class="token comment">//发送数据，参数1:要发送的数据char*类型，参数2:撒送数据的大小，参数3:ip地址,参数4:端口号</span>     sender<span class="token operator">-&gt;</span><span class="token function">writeDatagram</span><span class="token punctuation">(</span>datagram<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> datagram<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                           <span class="token function">QHostAddress</span><span class="token punctuation">(</span><span class="token string">"192.168.10.93"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token comment">//关闭发送套接字，源文件析构函数中</span>     sender<span class="token operator">-&gt;</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>发送端和接收端可以在一个项目中实现，也可以在两个项目中分别实现。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-78833.htm">动物疫苗公司产量排名（动物疫苗公司产量排名）</a></p>
                                        <p>下一个：<a href="/news/article-79524.htm">动物医院故事英文版 动物医院故事英文版视频</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-65633.htm" title="动物疫苗接种时间表图片（动物疫苗接种时间表图片）">动物疫苗接种时间表图片（动物疫苗接种时间表图片）</a></li>
                        <li class="py-2"><a href="/news/article-40864.htm" title="中农大动物医院有限公司是国企吗还是私企（中农大动物医院怎么样）">中农大动物医院有限公司是国企吗还是私企（中农大动物医院怎么样）</a></li>
                        <li class="py-2"><a href="/news/article-35402.htm" title="win11系统字体显示不全怎么办">win11系统字体显示不全怎么办</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-7-free-shadowrocket-node.htm" title="2月7日|SSR/Shadowrocket/V2ray/Clash每天更新20.9M/S免费节点订阅链接地址">2月7日|SSR/Shadowrocket/V2ray/Clash每天更新20.9M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-15-free-subscribe-node.htm" title="3月15日|Clash/Shadowrocket/SSR/V2ray每天更新19.1M/S免费节点订阅链接地址">3月15日|Clash/Shadowrocket/SSR/V2ray每天更新19.1M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-35878.htm" title="梦到抱着小女孩是什么意思啊（梦到抱着小女孩好不好）">梦到抱着小女孩是什么意思啊（梦到抱着小女孩好不好）</a></li>
                        <li class="py-2"><a href="/news/article-51887.htm" title="哈尔滨农业动物医院 哈尔滨农业动物医院电话">哈尔滨农业动物医院 哈尔滨农业动物医院电话</a></li>
                        <li class="py-2"><a href="/news/article-46336.htm" title="和田市宠物店电话号码（和田宠物店联系方式）">和田市宠物店电话号码（和田宠物店联系方式）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-15-clash-node.htm" title="2月15日|Shadowrocket/Clash/V2ray/SSR每天更新20M/S免费节点订阅链接地址">2月15日|Shadowrocket/Clash/V2ray/SSR每天更新20M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-55677.htm" title="动物疫苗的种类和制备原理图 动物疫苗的种类和制备原理图解">动物疫苗的种类和制备原理图 动物疫苗的种类和制备原理图解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">71</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copyright_text">
                            ClashNodesFree免费订阅站 版权所有
                            <br />
                            Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/website/js/frontend/clashnodesfree/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/popper.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/jquery-3.0.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/plugin.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>