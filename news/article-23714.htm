<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
    	<link rel="canonical" href="https://clashnodesfree.github.io/news/article-23714.htm" />
	<!-- basic -->
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	<!-- mobile metas -->
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="viewport" content="initial-scale=1, maximum-scale=1">
	<!-- site metas -->
	<title>Asp.Net Core使用Ocelot结合Consul实现服务注册和发现_实用技巧</title>
		<meta name="description" content="目录  1.服务注册与发现（Service Discovery） 2.Consul 3.Asp.Net Core向Consul注册服务实例 4.项目演示  4.1APIGateway项目 4.2Com" />
	
    <meta name="author" content="ClashNodesFree免费订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnodesfree.github.io/news/article-23714.htm" />
    <meta property="og:site_name" content="ClashNodesFree免费订阅站" />
    <meta property="og:title" content="Asp.Net Core使用Ocelot结合Consul实现服务注册和发现_实用技巧" />
    <meta property="og:image" content="https://clashnodesfree.github.io/uploads/20240323/8945162c010840446e9af908a3d6269d.webp" />
        <meta property="og:release_date" content="2024-12-10T09:59:27" />
    <meta property="og:updated_time" content="2024-12-10T09:59:27" />
        <meta property="og:description" content="目录  1.服务注册与发现（Service Discovery） 2.Consul 3.Asp.Net Core向Consul注册服务实例 4.项目演示  4.1APIGateway项目 4.2Com" />
        
	<!-- bootstrap css -->
	<link rel="stylesheet" type="text/css" href="/assets/website/css/clashnodesfree/bootstrap.min.css">
	<!-- style css -->
	<link rel="stylesheet" type="text/css" href="/assets/website/css/clashnodesfree/style.css">
	<!-- Responsive-->
	<link rel="stylesheet" href="/assets/website/css/clashnodesfree/responsive.css">
	<!-- favicon -->
	<link rel="icon" href="/assets/website/img/clashnodesfree/favicon.ico" type="image/x-icon"/>
	<!-- Scrollbar Custom CSS -->
	<link rel="stylesheet" href="/assets/website/css/clashnodesfree/jquery.mCustomScrollbar.min.css">
	<!-- Tweaks for older IEs-->
	<link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/4.0.3/css/font-awesome.css">
	<!-- fonts -->
	<link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;800&family=Sen:wght@400;700;800&display=swap" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Asp.Net Core使用Ocelot结合Consul实现服务注册和发现_实用技巧">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z348FF31FW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z348FF31FW');
</script>
	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header section start -->
    <div class="header_section header_bg">
        <div class="container-fluid">
                        <nav class="navbar navbar-expand-lg navbar-light bg-light">
                <div class="logo">
                                        <a href="/">Clash Nodes Free</a>
                                    </div>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
    <!-- header section end -->
    <!-- about sectuion start -->
    <div class="about_section layout_padding">
        <div class="container">
            <div class="breadcrumb">
              <a href="/">首页</a> / 
              <a href="/news/">新闻资讯</a> / 
              <span>正文</span>
            </div>

            <div class="row">
                <div class="col-md-9">
                    <h1 class="services_taital mb-5">Asp.Net Core使用Ocelot结合Consul实现服务注册和发现_实用技巧</h1>
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">1.服务注册与发现（Service Discovery）</a></li> <li><a href="#_label1" rel="nofollow">2.Consul</a></li> <li><a href="#_label2" rel="nofollow">3.Asp.Net Core向Consul注册服务实例</a></li> <li><a href="#_label3" rel="nofollow">4.项目演示</a></li> <ul class="second_class_ul"> <li><a href="#_lab2_3_0" rel="nofollow">4.1APIGateway项目</a></li> <li><a href="#_lab2_3_1" rel="nofollow">4.2Common项目</a></li> <li><a href="#_lab2_3_2" rel="nofollow">4.3APIServiceA项目</a></li> <li><a href="#_lab2_3_3" rel="nofollow">4.4APIServiceB项目</a></li> <li><a href="#_lab2_3_4" rel="nofollow">4.5项目运行</a></li> </ul> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>1.服务注册与发现（Service Discovery）</h2> <ul> <li>服务注册：我们通过在每个服务实例写入注册代码，实例在启动的时候会先去注册中心（例如Consul、ZooKeeper、etcd、Eureka）注册一下，那么客户端通过注册中心可以知道每个服务实例的地址，端口号，健康状态等等信息，也可以通过注册中心删除服务实例。这里注册中心相当于是负责维护服务实例的管控中心。</li> <li>服务发现：服务实例在注册中心注册之后，客户端通过注册中心可以了解这些服务实例运行状况。</li> </ul> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>2.Consul</h2> <p>如果要实现服务注册与发现，需要一个注册中心，这里主要介绍是Consul。</p> <p>Consul官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.consul.io/"   target="_blank" rel="nofollow">https://www.consul.io/</a>，它主要功能有：服务注册与发现、健康检查、Key/Value、多数据中心。</p> <p>如果在Windows上部署Consul，在consul.exe目录下执行<code>consul.exe agent -dev</code>命令行即可。</p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>3.Asp.Net Core向Consul注册服务实例</h2> <p>Asp.Net Core向Consul注册服务实例调用过程如下图所示：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/cd33db0e1666bd4167264b39959defbc.jpg"></p> <p>Asp.Net Core向Consul注册服务实例需要在Gateway项目中引用Consul支持的NuGet软件包，安装命令如下：</p> <div class="ay1code"> <pre class="brush:ps;">Install-Package Ocelot.Provider.Consul</pre> </div> <p>然后将以下内容添加到您的ConfigureServices方法中：</p> <div class="ay1code"> <pre class="brush:csharp;">services.AddOcelot().AddConsul();</pre> </div> <p>在Ocelot服务发现项目示例中，通过APIGateway项目GlobalConfiguration选项可以配置服务注册与发现，文件配置具体代码如下：</p> <div class="ay1code"> <pre class="brush:js;">{    "Routes": [      {        "UseServiceDiscovery": true,        "DownstreamPathTemplate": "/{url}",        "DownstreamScheme": "http",        "ServiceName": "MyService",        "LoadBalancerOptions": {          "Type": "RoundRobin"        },        "UpstreamPathTemplate": "/{url}",        "UpstreamHttpMethod": [ "Get" ],        "ReRoutesCaseSensitive": false      }    ],    "GlobalConfiguration": {      //服务发现配置      "ServiceDiscoveryProvider": {        //注册中心Consul地址        "Host": "192.168.113.128",        //注册中心Consul端口号        "Port": 8500,        "Type": "Consul",        //以毫秒为单位，告诉Ocelot多久调用一次Consul来更改服务配置。        "PollingInterval": 100,        //如果你有在Consul上配置key/value，则在这里输入配置key。        "ConfigurationKey": "MyService_AB"      }    }  }</pre> </div> <p>ServiceDiscoveryProvider选项说明：</p> <ul> <li>Host：注册中心Consul地址。</li> <li>Port：注册中心Consul端口号。</li> <li>Type：注册中心类型。</li> <li>PollingInterval：以毫秒为单位，告诉Ocelot多久调用一次Consul来更改服务配置。</li> <li>ConfigurationKey：如果你有在Consul上配置key/value，则在这里输入配置key。</li> </ul> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>4.项目演示</h2> <p class="maodian"><a name="_lab2_3_0" rel="nofollow"></a></p> <h3>4.1APIGateway项目</h3> <p>ConfigureServices添加Ocelot、Consul注入：</p> <div class="ay1code"> <pre class="brush:csharp;">services.AddOcelot().AddConsul();</pre> </div> <p>Configure添加使用Ocelot：</p> <div class="ay1code"> <pre class="brush:csharp;">app.UseOcelot().Wait();</pre> </div> <p>服务发现配置如Ocelot服务发现项目示例一样。</p> <p class="maodian"><a name="_lab2_3_1" rel="nofollow"></a></p> <h3>4.2Common项目</h3> <p>先安装Consul的NuGet软件包，安装命令如下：</p> <div class="ay1code"> <pre class="brush:ps;">Install-Package Consul</pre> </div> <p>在该项目添加一个AppExtensions扩展类，用来对服务APIServiceA、APIServiceB项目在Consul注册实例，为了展示效果，具体代码稍作修改如下：</p> <div class="ay1code"> <pre class="brush:csharp;">public static class AppExtensions  {      public static IServiceCollection AddConsulConfig(this IServiceCollection services, IConfiguration configuration)      {          services.AddSingleton&lt;IConsulClient, ConsulClient&gt;(p =&gt; new ConsulClient(consulConfig =&gt;          {              var address = configuration.GetValue&lt;string&gt;("Consul:Host");              consulConfig.Address = new Uri(address);          }));          return services;      }      public static IApplicationBuilder UseConsul(this IApplicationBuilder app, string host = null, string port = null)      {          //获取consul客户端实例          var consulClient = app.ApplicationServices.GetRequiredService&lt;IConsulClient&gt;();          var logger = app.ApplicationServices.GetRequiredService&lt;ILoggerFactory&gt;().CreateLogger("AppExtensions");          var lifetime = app.ApplicationServices.GetRequiredService&lt;IApplicationLifetime&gt;();            if (!(app.Properties["server.Features"] is FeatureCollection features)) return app;            //var addresses = features.Get&lt;IServerAddressesFeature&gt;();          //var address = addresses.Addresses.FirstOrDefault();          //if (address == null)          //{          //    return app;          //}            var address = host + ":" + port;          if (string.IsNullOrWhiteSpace(host) || string.IsNullOrWhiteSpace(port))          {              Console.WriteLine($"host或者port为空！");              return app;          }            Console.WriteLine($"address={address}");          var uri = new Uri(address);          Console.WriteLine($"host={uri.Host},port={uri.Port}");            var registration = new AgentServiceRegistration()          {              ID = $"MyService-{uri.Port}",              Name = "MyService",              Address = $"{uri.Host}",              Port = uri.Port,              Check = new AgentServiceCheck()              {                  DeregisterCriticalServiceAfter = TimeSpan.FromSeconds(5),//服务启动多久后注册                  Interval = TimeSpan.FromSeconds(10),//健康检查时间间隔                  HTTP = $"{address}/HealthCheck",//健康检查地址                  Timeout = TimeSpan.FromSeconds(5)//超时时间              }          };          logger.LogInformation("Registering with Consul");          logger.LogInformation($"Consul RegistrationID:{registration.ID}");          //注销          consulClient.Agent.ServiceDeregister(registration.ID).ConfigureAwait(true);          //注册          consulClient.Agent.ServiceRegister(registration).ConfigureAwait(true);          //应用程序关闭时候          lifetime.ApplicationStopping.Register(() =&gt;          {              //正在注销              logger.LogInformation("Unregistering from Consul");              consulClient.Agent.ServiceDeregister(registration.ID).ConfigureAwait(true);          });          //每个服务都需要提供一个用于健康检查的接口，该接口不具备业务功能。服务注册时把这个接口的地址也告诉注册中心，注册中心会定时调用这个接口来检测服务是否正常，如果不正常，则将它移除，这样就保证了服务的可用性。          app.Map("/HealthCheck", s =&gt;          {              s.Run(async context =&gt;              {                  await context.Response.WriteAsync("ok");              });          });          return app;      }  }</pre> </div> <p class="maodian"><a name="_lab2_3_2" rel="nofollow"></a></p> <h3>4.3APIServiceA项目</h3> <p>项目添加一个Get方法，对应APIGateway项目的路由上下游配置，具体代码如下：</p> <div class="ay1code"> <pre class="brush:csharp;">[Route("api/[controller]")]  [ApiController]  public class ValuesController : ControllerBase  {      // GET api/values      [HttpGet]      public ActionResult&lt;IEnumerable&lt;string&gt;&gt; Get()      {          var port = Request.Host.Port;          return new string[] { "value1", "value2", port.Value.ToString() };      }  }</pre> </div> <p>appsettings.json配置加入Consul地址：</p> <div class="ay1code"> <pre class="brush:js;">"Consul": {    "Host": "http://192.168.113.128:8500"  }</pre> </div> <p class="maodian"><a name="_lab2_3_3" rel="nofollow"></a></p> <h3>4.4APIServiceB项目</h3> <p>项目添加一个Get方法，对应APIGateway项目的路由上下游配置，具体代码如下：</p> <div class="ay1code"> <pre class="brush:csharp;">[Route("api/[controller]")]  [ApiController]  public class ValuesController : ControllerBase  {      // GET api/values      [HttpGet]      public ActionResult&lt;IEnumerable&lt;string&gt;&gt; Get()      {          var port = Request.Host.Port;          return new string[] { "value3", "value4", port.Value.ToString() };      }  }</pre> </div> <p>appsettings.json配置加入Consul地址：</p> <div class="ay1code"> <pre class="brush:js;">"Consul": {    "Host": "http://192.168.113.128:8500"  }</pre> </div> <p class="maodian"><a name="_lab2_3_4" rel="nofollow"></a></p> <h3>4.5项目运行</h3> <p>在APIServiceA、APIServiceB项目的ConfigureServices添加Consul配置：</p> <div class="ay1code"> <pre class="brush:csharp;">services.AddConsulConfig(Configuration);</pre> </div> <p>在Configure添加Consul服务注册：</p> <div class="ay1code"> <pre class="brush:csharp;">APIServiceA：app.UseConsul("http://172.168.18.73", "9999");  APIServiceB：app.UseConsul("http://172.168.18.73", "9998");</pre> </div> <p>把APIGateway、APIServiceA、APIServiceB三个项目部署到IIS上：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/b8bbac2bccce86366dd2e6ed31980fe3.jpg"></p> <p>三个项目运行起来后，通过浏览器Consul客户端可以看到MyService节点服务情况：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/2715455cb450327a95c11f091fb86dbf.jpg"></p> <p>点击打开MyService节点可以看到注册到Consul的APIServiceA、APIServiceB服务状况：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/8d1012407eb4cc91061f8621245a09b5.jpg"></p> <p>如果把APIServiceB服务实例站点停掉：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/a0caac9e4ac511d75e4999d9d7056fc4.jpg"></p> <p>通过Consul客户端会看到APIServiceB服务实例已经被剔除了：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/6610e549024b66da2e72fd75dff9bd3d.jpg"></p> <p>如果输入CTRL+C把集群中某一个Consul服务关闭，那么集群会重新选举一个新的leader，负责处理所有服务实例的查询和事务：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/833b582a71a0deacfc48838310204c33.jpg"></p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220420/6cfb2d7b07a7dfa5b3914e3b0c4333d7.jpg"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-23713.htm">vue项目中设置Echarts图表的大小</a></p>
                                        <p>下一个：<a href="/news/article-24491.htm">SSM框架中实现数据库操作-从零学习SSM框架（3）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-33121.htm" title="动物防疫站电话咨询电话号码（动物防疫站电话咨询电话号码）">动物防疫站电话咨询电话号码（动物防疫站电话咨询电话号码）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-20-clash-node.htm" title="1月20日|V2ray/Clash/Shadowrocket/SSR每天更新22.2M/S免费节点订阅链接地址">1月20日|V2ray/Clash/Shadowrocket/SSR每天更新22.2M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-49809.htm" title="拼多多58元开无货源网店是真的吗知乎（拼多多500元开店无货源）">拼多多58元开无货源网店是真的吗知乎（拼多多500元开店无货源）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-ssr-subscribe.htm" title="1月9日|SSR/Clash/Shadowrocket/V2ray每天更新22.6M/S免费节点订阅链接地址">1月9日|SSR/Clash/Shadowrocket/V2ray每天更新22.6M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30097.htm" title="有的人是不是不能养猫（有些人是不是不适合养宠物）">有的人是不是不能养猫（有些人是不是不适合养宠物）</a></li>
                        <li class="py-2"><a href="/news/article-45831.htm" title="python自动化测试工具selenium使用指南">python自动化测试工具selenium使用指南</a></li>
                        <li class="py-2"><a href="/news/article-48250.htm" title="vue+Echarts绘制动态折线图">vue+Echarts绘制动态折线图</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-clash-windows.htm" title="1月5日|Clash/Shadowrocket/SSR/V2ray每天更新23M/S免费节点订阅链接地址">1月5日|Clash/Shadowrocket/SSR/V2ray每天更新23M/S免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-25111.htm" title="Halo 开源项目学习注册与登录">Halo 开源项目学习注册与登录</a></li>
                        <li class="py-2"><a href="/news/article-23252.htm" title="宠物粮食品牌前十名有哪些呢视频 宠物粮食品牌前十名有哪些呢视频讲解">宠物粮食品牌前十名有哪些呢视频 宠物粮食品牌前十名有哪些呢视频讲解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- about sectuion end -->
        <!-- copyright section start -->
    <div class="copyright_section">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="copyright_text">
                            ClashNodesFree免费订阅站 版权所有
                            <br />
                            Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- copyright section end -->
    <!-- Javascript files-->
    <script src="/assets/website/js/frontend/clashnodesfree/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/popper.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/jquery-3.0.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodesfree/plugin.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>